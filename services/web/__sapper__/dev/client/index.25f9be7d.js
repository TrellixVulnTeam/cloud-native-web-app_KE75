import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, p as validate_store, u as component_subscribe, v as validate_slots, L as onMount, M as goto, N as currentUser, e as element, t as text, a as space, f as claim_element, g as children, h as claim_text, b as detach_dev, c as claim_space, k as add_location, l as insert_dev, m as append_dev, A as empty, n as noop } from './client.15163bf3.js';

/* src/routes/admin/index.svelte generated by Svelte v3.32.1 */
const file = "src/routes/admin/index.svelte";

// (13:0) {#if $currentUser}
function create_if_block(ctx) {
	let h1;
	let t0;
	let t1;
	let p;
	let t2;

	const block = {
		c: function create() {
			h1 = element("h1");
			t0 = text("Admin dashboard");
			t1 = space();
			p = element("p");
			t2 = text("Only authenticated users have access to this.");
			this.h();
		},
		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Admin dashboard");
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t2 = claim_text(p_nodes, "Only authenticated users have access to this.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 13, 2, 263);
			add_location(p, file, 14, 2, 290);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t2);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(13:0) {#if $currentUser}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let if_block_anchor;
	let if_block = /*$currentUser*/ ctx[0] && create_if_block(ctx);

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
		},
		p: function update(ctx, [dirty]) {
			if (/*$currentUser*/ ctx[0]) {
				if (if_block) ; else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $currentUser;
	validate_store(currentUser, "currentUser");
	component_subscribe($$self, currentUser, $$value => $$invalidate(0, $currentUser = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Admin", slots, []);

	onMount(() => {
		if (!$currentUser) {
			goto("/auth/login?redirect=admin");
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Admin> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ goto, onMount, currentUser, $currentUser });
	return [$currentUser];
}

class Admin extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Admin",
			options,
			id: create_fragment.name
		});
	}
}

export default Admin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMjVmOWJlN2QuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYWRtaW4vaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGltcG9ydCB7IGdvdG8gfSBmcm9tICdAc2FwcGVyL2FwcCc7XG4gIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tIFwic3ZlbHRlXCI7XG4gIGltcG9ydCB7IGN1cnJlbnRVc2VyIH0gZnJvbSBcIi4uLy4uL3N0b3Jlcy91c2VyXCI7XG5cbiAgb25Nb3VudCgoKSA9PiB7XG4gICAgaWYgKCEkY3VycmVudFVzZXIpIHtcbiAgICAgIGdvdG8oXCIvYXV0aC9sb2dpbj9yZWRpcmVjdD1hZG1pblwiKVxuICAgIH1cbiAgfSk7XG48L3NjcmlwdD5cblxueyNpZiAkY3VycmVudFVzZXJ9XG4gIDxoMT5BZG1pbiBkYXNoYm9hcmQ8L2gxPlxuICA8cD5Pbmx5IGF1dGhlbnRpY2F0ZWQgdXNlcnMgaGF2ZSBhY2Nlc3MgdG8gdGhpcy48L3A+XG57L2lmfSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztpQ0FZSyxHQUFZOzs7Ozs7Ozs7Ozs7Ozs7O3dCQUFaLEdBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FQZixPQUFPO09BQ0EsWUFBWTtHQUNmLElBQUksQ0FBQyw0QkFBNEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
